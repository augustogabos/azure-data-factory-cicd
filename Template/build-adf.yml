parameters:
- name: devDataFactoryID

steps:
- checkout: self

# Installs Node and the npm packages saved in your package.json file in the build
- task: NodeTool@0
  inputs:
    versionSpec: '14.x'
  displayName: 'Install Node.js'

- task: Npm@1
  inputs:
    command: 'install'
    workingDir: '$(Build.Repository.LocalPath)\datafactory' #replace with the package.json folder
    verbose: true
  displayName: 'Install npm package'

# Validates all of the Data Factory resources in the repository. You'll get the same validation errors as when "Validate All" is selected.
# Enter the appropriate subscription and name for the source factory. Either of the "Validate" or "Validate and Generate ARM temmplate" options are required to perform validation. Running both is unnecessary.

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: '$(Build.Repository.LocalPath)\datafactory' #replace with the package.json folder
    customCommand: 'run build validate $(Build.Repository.LocalPath)\datafactory ${{ parameters.devDataFactoryID }}'
  displayName: 'Validate'

# Validate and then generate the ARM template into the destination folder, which is the same as selecting "Publish" from the UX.
# The ARM template generated isn't published to the live version of the factory. Deployment should be done by using a CI/CD pipeline. 

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: '$(Build.Repository.LocalPath)\datafactory' #replace with the package.json folder
    customCommand: 'run build export $(Build.Repository.LocalPath)\datafactory ${{ parameters.devDataFactoryID }} "ArmTemplate"'
  displayName: 'Generate ARM template'

- task: CopyFiles@2
  displayName: Copiando os arquivos ARM
  inputs:
    SourceFolder: '$(Build.Repository.LocalPath)\datafactory'
    Contents: |
      ArmTemplate/**/*
      ADF/Scripts/**/*
    TargetFolder: '$(Build.ArtifactStagingDirectory)/dropARM'

# Publish the artifact to be used as a source for a release pipeline.
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/dropARM' 
    artifact: 'dropARM'
    publishLocation: 'pipeline'